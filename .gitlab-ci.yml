image: python:3.9

.lint_setup: &lint_setup
    stage: lint
    image: python:latest
    allow_failure: false
    before_script:
        - pip3 install .[lint]

.test_setup: &test_setup
    stage: test
    allow_failure: true
    coverage: '/^TOTAL.*\s+(\d+\%)$/'
    script:
        - pip install .[test]
        - pytest --cov-report=term --cov=credmgr tests

include:
    -   template: Code-Quality.gitlab-ci.yml

variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
    paths:
        - .cache/pip
        - venv/

before_script:
    - python -V  # Print out python version for debugging
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate

stages:
    - lint
    - test
    - deploy
    - pages


lint:black:
    <<: *lint_setup
    script:
        - black --check .

lint:isort:
    <<: *lint_setup
    script:
        - isort -c .

lint:docstrfmt:
    <<: *lint_setup
    script:
        - docstrfmt -c credmgr docs

lint:flynt:
    <<: *lint_setup
    script:
        - flynt -tc -ll 1000 .

lint:pydocstyle:
    <<: *lint_setup
    script:
        - pydocstyle credmgr

lint:flake8:
    <<: *lint_setup
    script:
        - flake8


test:pytest3.6:
    <<: *test_setup
    image: python:3.6

test:pytest3.7:
    <<: *test_setup
    image: python:3.7

test:pytest3.8:
    <<: *test_setup
    image: python:3.8

test:pytest3.9:
    <<: *test_setup
    image: python:3.9

test:pytest3.10:
    <<: *test_setup
    image: python:3.10


deploy:pypi:
    stage: deploy
    variables:
        TWINE_USERNAME: $PYPI_USERNAME
        TWINE_PASSWORD: $PYPI_PASSWORD
    before_script:
        - pip install twine
        - python setup.py sdist
    script:
        - twine upload dist/*
    only:
        - tags

deploy:pages:
    stage: deploy
    script:
        - pip install .[docs]
        - cd docs ; make html
        - mv _build/html/ ../public/
    artifacts:
        paths:
            - public
    only:
        - tags
